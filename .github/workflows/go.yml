name: Go Multi-Platform Build & Release

on:
  push:
    tags: ["v*"] # Triggers when a version tag (e.g., v1.0.0) is pushed
  workflow_dispatch:
  
permissions:
  contents: write 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [js]
        arch: [wasm]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Set environment variables
        run: echo "OUTPUT_NAME=${{ matrix.os }}-${{ matrix.arch }}" >> $GITHUB_ENV
        shell: bash

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p dist/${{ matrix.os }}-${{ matrix.arch }}
          output="dist/${{ matrix.os }}-${{ matrix.arch }}/"

          make release

      - name: Package as ZIP
        run: |
          cd dist
          for file in *; do
            zip -r "${file}.zip" "$file"
          done
          cd ..

      - name: Upload ZIP Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}.zip
          path: dist/${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download ZIP Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: List files
        run: pwd; ls -R ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "## Changes in this release\n\n- Auto-generated release from GitHub Actions"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
